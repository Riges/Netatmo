name: CI

on:
  push:
    branches:
      - master
    tags:
      - "*"
  pull_request:
    branches:
      - master
  # release:
  #   types: [prereleased, edited]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v1
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.101
      - name: Restore packages
        run: dotnet restore src
      - name: Test
        run: dotnet test src --configuration Release
  build:
    name: Create Package nuget
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.event.created == true && github.event.base_ref == 'refs/heads/master' && github.event.compare != '' && github.ref != ''
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump GitHub REF
        env:
          RELEASE_VERSION: ${{GITHUB_REF:10}}
        run: echo "$RELEASE_VERSION"
      - name: Test
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
      - uses: actions/checkout@v1
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.101
      - name: Restore packages
        run: dotnet restore src
      - name: Build and create package nuget
        run: dotnet pack src -c Release -p:PackageVersion=${{GITHUB_REF:10}}
      - name: Publish artifact
        uses: actions/upload-artifact@master
        with:
          name: Netatmo.${{GITHUB_REF:10}}.nupkg
          path: src/Netatmo/bin/Netatmo.${{GITHUB_REF:10}}.nupkg
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }} ${{GITHUB_REF:10}}
          draft: false
          prerelease: false
